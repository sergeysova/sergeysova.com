{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/post.js"],"names":["languages","ru","en","pageQuery","BlogPage","data","allMarkdownRemark","latest","distinct","React","useEffect","document","location","href","title","description","map","lang","to","key","style","display","paddingRight","edges","node","id","frontmatter","timeToRead","excerpt","Post","slug","publishedAgo","dangerouslySetInnerHTML","__html"],"mappings":"2FAAA,0HAOMA,EAAY,CAChBC,GAAI,aACJC,GAAI,WAsCOC,EAAS,aA4BPC,UA/DE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAA8BD,EAA9BC,kBAAmBC,EAAWF,EAAXE,OACnBC,EAAaF,EAAbE,SAMR,OAJAC,IAAMC,WAAU,WACdC,SAASC,SAASC,KAAO,qBACxB,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,YAAY,uCAC9B,6BACGP,EAASQ,KAAI,SAAAC,GAAI,OAChB,kBAAC,OAAD,CAAMC,GAAE,IAAMD,EAAQE,IAAKF,GACzB,wBAAIG,MAAO,CAAEC,QAAS,eAAgBC,aAAc,WACjDtB,EAAUiB,SAKnB,sCACA,6BACGV,EAAOgB,MAAMP,KAAI,gBAAGQ,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,CACEL,IAAKK,EAAKC,GACVC,YAAaF,EAAKE,YAClBC,WAAYH,EAAKG,WACjBC,QAASJ,EAAKI,iB,kCCvC1B,uEAGaC,EAAO,SAAC,GAAD,IAAGH,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,QAA5B,OAClB,6BACE,kBAAC,OAAD,CAAMV,GAAE,IAAMQ,EAAYT,KAAlB,IAA0BS,EAAYI,MAC5C,4BAAKJ,EAAYZ,QAEnB,8BACGY,EAAYK,aADf,MACgCJ,EADhC,aAGCD,EAAYX,aAAe,2BAAIW,EAAYX,aAC5C,uBAAGiB,wBAAyB,CAAEC,OAAQL","file":"component---src-pages-index-js-4daaf2ea3eef96f45961.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport { Layout } from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\nimport { Post } from \"../components/post\"\n\nconst languages = {\n  ru: \"На русском\",\n  en: \"English\",\n}\n\nconst BlogPage = ({ data }) => {\n  const { allMarkdownRemark, latest } = data\n  const { distinct } = allMarkdownRemark\n   \n  React.useEffect(() => {\n    document.location.href = \"https://sova.dev\"\n  }, [])\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" description=\"Writings about JavaScript and Rust\" />\n      <div>\n        {distinct.map(lang => (\n          <Link to={`/${lang}`} key={lang}>\n            <h3 style={{ display: \"inline-block\", paddingRight: \"0.5rem\" }}>\n              {languages[lang]}\n            </h3>\n          </Link>\n        ))}\n      </div>\n      <h2>Latest</h2>\n      <div>\n        {latest.edges.map(({ node }) => (\n          <Post\n            key={node.id}\n            frontmatter={node.frontmatter}\n            timeToRead={node.timeToRead}\n            excerpt={node.excerpt}\n          />\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      distinct(field: frontmatter___lang)\n    }\n    latest: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 4\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            description\n            lang\n            publishedAgo: date(fromNow: true)\n            slug\n            title\n          }\n          id\n          excerpt(pruneLength: 300, format: HTML)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport const Post = ({ frontmatter, timeToRead, excerpt }) => (\n  <div>\n    <Link to={`/${frontmatter.lang}/${frontmatter.slug}`}>\n      <h2>{frontmatter.title}</h2>\n    </Link>\n    <time>\n      {frontmatter.publishedAgo} — {timeToRead}m to read\n    </time>\n    {frontmatter.description && <p>{frontmatter.description}</p>}\n    <p dangerouslySetInnerHTML={{ __html: excerpt }}></p>\n  </div>\n)\n"],"sourceRoot":""}