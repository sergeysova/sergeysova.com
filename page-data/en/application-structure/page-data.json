{"componentChunkName":"component---src-templates-blog-template-js","path":"/en/application-structure","result":{"data":{"markdownRemark":{"html":"<p><a href=\"https://featureslices.dev/v0.1\"><img src=\"https://img.shields.io/badge/feature/slices-0.1-orange\"></a></p>\n<blockquote>\n<p>Translated by <a href=\"https://t.me/murgut\">Murgut</a></p>\n</blockquote>\n<p>I split my source code on <code>features/</code>, <code>ui/</code> and <code>pages/</code>.<br/>\n<strong>Logic</strong> can be only in the <code>pages/</code> and <code>features/</code>.</p>\n<!-- cut -->\n<p>Example:</p>\n<blockquote>\n<p>▸ — the icon of collapse directory tree</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  api/▸\n  features/▸\n  lib/▸\n  pages/▸\n  ui/▸</code></pre></div>\n<h2>1. <a href=\"https://t.me/feature_slices\">Feature</a> structure:</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  features/\n    account/▸\n    editor/▸\n    settings/▸\n    users/\n      atoms/\n        index.js\n        avatar.js\n      lib/\n        lib-name/\n          index.js\n          test.js\n          readme.md\n      models/▸\n      molecules/▸\n      organisms/▸\n      templates/▸\n      index.js</code></pre></div>\n<p><a href=\"https://t.me/feature_slices\">Feature</a> — it is useful functionality for user or suite of entities which are united by one idea. For instance: users, text-editor, account, articles.</p>\n<p><a href=\"https://t.me/feature_slices\">Feature</a> cannot be grouped by type, too much abstract entity. Examples <strong>how not to do</strong>: roles, forms, validate.</p>\n<ol>\n<li>Every feature must have the same structure.</li>\n<li><code>users</code>, <code>account</code>, ... — arbitary name of the feature in cebab-case.</li>\n<li>The feature's content may be recieved only from <code>index.js</code>.</li>\n<li>Every section can only be created if it has content inside.</li>\n<li><code>lib/</code> it is <a href=\"/ru/why-utils-and-helpers-is-a-dump\">inner library</a> of feature. It must have tests and documentation.</li>\n<li><code>index.js</code> for re-export necessary elements outside.</li>\n<li><code>models/</code> — <a href=\"/ru/effector-model-structure.ru.md\">effector models</a>.</li>\n</ol>\n<h3>1.1 <a href=\"http://atomicdesign.bradfrost.com\">Atomic</a> in <a href=\"https://t.me/feature_slices\">Feature</a></h3>\n<p><code>atoms</code>, <code>molecules</code>, <code>organisms</code>, <code>templates</code> — <a href=\"http://atomicdesign.bradfrost.com\">atomic design</a>, <a href=\"https://t.me/feature_slices\">feature</a>'s components.</p>\n<p>If every component asumes many files in such case you should create (<code>.test</code>, <code>.story</code>, <code>.md</code>, ...):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">feature/\n  users/\n    atoms/▸\n    molecules/\n      personal-apply/▸\n      user-card/\n        index.js\n        story.js\n        test.js\n        readme.md\n    organisms/▸\n    templates/▸</code></pre></div>\n<p>No need of directories if you don't have many files. Important, that in range of feature all look the same.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">feature/\n  settings/\n    atoms/▸\n    molecules/▸\n    organisms/\n      monitoring-editor.js\n      monitoring-editor.test.js\n      marketplace.js\n      marketplace.test.js</code></pre></div>\n<h2>2. Page's structure:</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  pages/\n    post/\n      model.js\n      page.js\n    posts/\n      create/▸\n      edit/▸\n    auth/\n      login/▸\n      register/\n        model.js\n        page.js</code></pre></div>\n<ol>\n<li>Page's nesting must map routing of true url.</li>\n<li>There is source code of component in <code>page.js</code></li>\n<li>There is uniq logic of the page in <code>model.js</code></li>\n<li>There is any common logic in <a href=\"/ru/why-utils-and-helpers-is-a-dump\">library code</a> <code>src/lib/lib-name/</code></li>\n</ol>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  pages/\n    post/\n      page.js\n      model.js\n    repo/\n      view/\n        pulls/▸\n        issues/\n          view/\n            page.js\n            model.js\n        page.js\n        model.js\n    index.js</code></pre></div>\n<ul>\n<li>\n<p>Page of blog post</p>\n<ul>\n<li>file: <code>src/pages/post/page.js</code></li>\n<li>route: <code>/post/:postSlug</code> (or <code>/:postSlug</code>)</li>\n<li>example: <code>/post/effector-model</code></li>\n</ul>\n</li>\n<li>\n<p>Viewer of repository issue</p>\n<ul>\n<li>file: <code>src/pages/repo/view/issues/view/page.js</code></li>\n<li>route: <code>/repo/:repoSlug/issues/:issueId</code></li>\n<li>example: <code>/repo/effector/issues/5</code></li>\n</ul>\n</li>\n</ul>\n<h2>3. UI structure:</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">src/\n  ui/\n    atoms/\n      index.js\n      component-name/\n        index.js\n        readme.js\n        story.js\n        test.js\n    molecules/▸\n    organisms/▸\n    templates/▸\n    index.js</code></pre></div>\n<ol>\n<li><a href=\"http://atomicdesign.bradfrost.com\">Atomic Design</a></li>\n<li>All UI are building blocks which allow to create any feature.</li>\n<li>UI must be disconnected from any global stores.</li>\n<li>Components must be maximally reusable and independent on context <em>(not React Context API)</em>.</li>\n</ol>","frontmatter":{"date":"August 20, 2019","description":"Where to look for files and where to put new","title":"Application structure"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-feature-structure\">1. Feature structure:</a></p>\n<ul>\n<li><a href=\"#11-atomic-in-feature\">1.1 Atomic in Feature</a></li>\n</ul>\n</li>\n<li><a href=\"#2-pages-structure\">2. Page's structure:</a></li>\n<li><a href=\"#3-ui-structure\">3. UI structure:</a></li>\n</ul>","excerpt":"Translated by Murgut I split my source code on features/, ui/ and pages/.\nLogic can be only in the pages/ and features/."}},"pageContext":{"slug":"application-structure","lang":"en"}}}